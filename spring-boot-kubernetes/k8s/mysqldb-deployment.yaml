apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\SUBHANKAR-WS\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f ./docker-compose-prod.yml -o ./k8s
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: mysqldb
  name: mysqldb
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mysqldb
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\SUBHANKAR-WS\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f ./docker-compose-prod.yml -o ./k8s
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/spring-boot-kubernetes-backend: "true"
        io.kompose.service: mysqldb
    spec:
      containers:
        - args:
            - --default-authentication-plugin=mysql_native_password
          env:
            - name: MYSQL_DATABASE
              value: movies_db
            - name: MYSQL_PASSWORD
              value: admin@123
            - name: MYSQL_ROOT_PASSWORD
              value: admin123
            - name: MYSQL_USER
              value: db_admin
          image: mysql:8.0.12
          name: mysqldb
          ports:
            - containerPort: 3306
              hostPort: 3306
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-data
      restartPolicy: Always
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-data
status: {}
